### * Description

# This is a Makefile, which can be used with the `make` command from the
# terminal to automatically run some tasks based on rules defined below.

### * Setup

# Get the path to the project top directory (based on where the `.git` folder is located)
TOP_DIR=$(shell git rev-parse --show-toplevel)

### ** Colors

# https://stackoverflow.com/questions/5947742/how-to-change-the-output-color-of-printf-in-linux
# https://siongui.github.io/2016/02/18/makefile-printf-color-output/#id3
RED = "\\033[31m"
GREEN = "\\033[92m"
NC = "\\033[0m"

### * Rules

### ** help

# http://swcarpentry.github.io/make-novice/08-self-doc/
# https://stackoverflow.com/questions/19129485/in-linux-is-there-a-way-to-align-text-on-a-delimiter
.PHONY: help
help: Makefile
	@printf "\n"
	@printf "Please use 'make <target>' where <target> is one of\n"
	@printf "\n"
	@sed -n 's/^## /    /p' $< | column -t -s ":"

### ** document

## document : generate package documentation using Roxygen
.PHONY: document
document:
	@printf "\n"
	@printf "$(GREEN)*** Generating package documentation with Roxygen ***$(NC)\n"
	@printf "\n"
	@ Rscript -e 'devtools::document()'

### ** test

## test : run package tests
.PHONY: test
test:
	@printf "\n"
	@printf "$(GREEN)*** Running package tests ***$(NC)\n"
	@printf "\n"
	@Rscript -e "library(devtools); test()"
	@cd tests/testthat; rm -f Rplots.pdf

### ** coverage

## coverage : determine test coverage
.PHONY: coverage
coverage:
	@printf "\n"
	@printf "$(GREEN)*** Determining test coverage ***$(NC)\n"
	@printf "\n"
	@mkdir -p docs/coverage/
	@Rscript -e "library(covr); cov = package_coverage(); report(cov, \"$(TOP_DIR)/docs/coverage/coverage.html\"); print(paste(\"Coverage_percent: --\", round(percent_coverage(cov), 2), \"--\"))"

### ** install

## install : install the package (also runs "document")
.PHONY: install
install: document
	@printf "\n"
	@printf "$(GREEN)*** Installing the package ***$(NC)\n"
	@printf "\n"
	@Rscript -e 'devtools::install(upgrade = FALSE)'

### ** install-deps

## install-deps : install dependencies needed for CI pipelines
.PHONY: install-deps
install-deps:
	@printf "\n"
	@printf "$(GREEN)*** Installing dependencies for continuous integration pipelines ***$(NC)\n"
	@printf "\n"
	@Rscript -e 'install.packages(c("ape", "readxl", "writexl", "testthat", "stringdist", "qualV", "igraph", "DT"))'
	@Rscript -e 'install.packages(c("pkgdown", "covr"))'

### ** install-with-deps

## install-with-deps : run 'install-deps' and 'install'
.PHONY: install-with-deps
install-with-deps: install-deps install

### ** pkgdown

## pkgdown : build the package website in docs/ using pkgdown
.PHONY: pkgdown
pkgdown:
	@printf "\n"
	@printf "$(GREEN)*** Building package website with pkgdown ***$(NC)\n"
	@printf "\n"
	@Rscript -e 'pkgdown::build_site()'

### ** check

## check : run R CMD CHECK through devtools check() function
.PHONY: check
check:
	@printf "\n"
	@printf "$(GREEN)*** Running 'devtools::check()' ***$(NC)\n"
	@printf "\n"
	@Rscript .run_check_and_get_badge.R

### ** clean

## clean : delete all files and folders automatically generated
.PHONY: clean
clean: clean-man clean-docs clean-vignettes
	@printf "\n"
	@printf "$(GREEN)*** Cleaned automatically generated files and folders ***$(NC)\n"
	@printf "\n"
	rm -f rhub-report_*

### ** clean-man

##clean-man : delete documentation generated by Roxygen
.PHONY: clean-man
clean-man:
	rm -f man/*.Rd

### ** clean-docs

##clean-docs : delete documentation generated by pkgdown
.PHONY: clean-docs
clean-docs:
	rm -fr docs/*

### ** clean-vignettes

##clean-vignettes : delete files generated during vignettes run
.PHONY: clean-vignettes
clean-vignettes:
	@rm -fr vignettes/merged-seqs*
	@rm -fr vignettes/concatenated*
	@rm -fr vignettes/concatipede_test
	@rm -fr vignettes/Macrobiotidae_4genes*
	@rm -fr vignettes/Macrobiotidae_COI*
	@rm -fr vignettes/Macrobiotus_4genes*
	@rm -f vignettes/*.html
	@rm -f vignettes/auto-matched-for-later-check.xlsx
	@rm -f vignettes/template-for-later-check.xlsx
	@rm -f vignettes/my-merged-seqs.*
	@rm -f vignettes/my-template.xlsx
	@rm -f vignettes/template.xlsx
	@rm -f vignettes/template_automatched.xlsx
	@rm -f vignettes/seqnames.xlsx
